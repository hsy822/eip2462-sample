{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.*/src/index/.js$","../node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src sync","../node_modules/blind-threshold-bls/src sync","assets/img/json.PNG","assets/img/function.PNG","assets/img/relayer.png","assets/img/eth.png","assets/img/celo.png","assets/img/klaytntr.png","getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","getWeb3","Promise","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","App","state","abi","coinbase","chain","chainId","jsonInterface","constant","inputs","internalType","name","type","outputs","payable","stateMutability","relayerJsonInterface","ethProvider","ethContractAddress","ethContractInstance","ethOwner","ethTimestamp","ethSignature","ethRelayer","ethRelayerBalance","maticProvider","maticContractAddress","maticContractInstance","maticOwner","maticTimestamp","maticSignature","maticRelayer","maticRelayerBalance","celoProvider","celoContractAddress","celoContractInstance","celoOwner","celoTimestamp","celoSignature","celoRelayer","celoRelayerBalance","klayProvider","klayContractAddress","klayContractInstance","klayOwner","klayTimestamp","klaySignature","klayRelayer","klayRelayerBalance","modal","url","display","Kit","require","componentDidMount","eth","getAccounts","accounts","self","on","setState","ethWalletInstance","privateKeyToAccount","wallet","add","address","utils","getBalance","fromWei","Contract","methods","owner","call","Caver","kalyWalletInstance","klay","newKit","addAccount","celoAccounts","contracts","getGoldToken","goldtoken","balanceOf","toString","alert","error","refresh","getRelayerBalance","getOwner","sign","timestamp","Date","getTime","data","encodeFunctionCall","hex","padLeft","toHex","slice","personal","keccak256","then","signature","metaTx","estimateGas","from","to","gas","sendTransaction","parseInt","hash","toggleModal","receipt","tx","getHash","waitReceipt","this","className","style","margin","marginBottom","href","target","width","src","Container","Row","Col","md","Card","minHeight","CardHeader","alt","CardBody","marginTop","fontWeight","ListGroup","ListGroupItem","Button","color","onClick","lg","Modal","isOpen","toggle","ModalBody","position","zIndex","left","top","height","overflow","backgroundColor","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6LAAA,IAAIA,EAAM,CACT,oCAAqC,GACrC,mCAAoC,GACpC,gEAAiE,IACjE,+DAAgE,IAChE,8DAA+D,IAC/D,2CAA4C,IAC5C,0CAA2C,GAC3C,4BAA6B,GAC7B,2CAA4C,IAC5C,gDAAiD,IACjD,gDAAiD,IACjD,gDAAiD,IACjD,4BAA6B,IAC7B,kCAAmC,IACnC,2BAA4B,GAC5B,2BAA4B,GAC5B,kCAAmC,IACnC,wCAAyC,IACzC,6BAA8B,IAI/B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kLCxCpB,SAASY,EAAoBb,GAC5B,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEPQ,EAAoBL,KAAO,WAAa,MAAO,IAC/CK,EAAoBH,QAAUG,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBZ,GAAK,K,gFCRzB,SAASY,EAAoBb,GAC5B,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEPQ,EAAoBL,KAAO,WAAa,MAAO,IAC/CK,EAAoBH,QAAUG,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBZ,GAAK,K,wCCRzBU,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,4MCqC5BE,EAnCC,kBACd,IAAIC,SAAQ,SAACL,EAASM,GAEpBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAC,EAAA,0DAE1BF,OAAOG,SAFmB,wBAGtBC,EAAO,IAAIC,IAAKL,OAAOG,UAHD,kBAMpBH,OAAOG,SAASG,SANI,OAQ1Bb,EAAQW,GARkB,gDAU1BL,EAAO,EAAD,IAVoB,gCAcrBC,OAAOI,MAERA,EAAOJ,OAAOI,KACpBG,QAAQC,IAAI,2BACZf,EAAQW,KAIFK,EAAW,IAAIJ,IAAKK,UAAUC,aAClC,yBAEIP,EAAO,IAAIC,IAAKI,GACtBF,QAAQC,IAAI,gDACZf,EAAQW,IA3BoB,8D,8HC+0BrBQ,E,2MA3zBbC,MAAQ,CACEC,IAAK,CACH,CACE,OAAU,GACV,SAAW,EACX,gBAAmB,aACnB,KAAQ,eAEV,CACE,WAAa,EACb,OAAU,CACR,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,OACR,KAAQ,YAGZ,KAAQ,SACR,KAAQ,SAEV,CACE,UAAY,EACZ,OAAU,GACV,KAAQ,QACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAEV,CACE,UAAY,EACZ,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGZ,KAAQ,WACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAEV,CACE,UAAY,EACZ,OAAU,CACR,CACE,aAAgB,QAChB,KAAQ,OACR,KAAQ,SAEV,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGZ,KAAQ,WACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,aAGZV,KAAM,KAAMW,SAAU,KACtBC,MAAO,MAAOC,QAAS,EACvBC,cAAe,CACbC,UAAU,EACVC,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNE,QAAS,GACTC,SAAS,EACTC,gBAAiB,aACjBH,KAAM,YAERI,qBAAsB,CACpB,UAAY,EACZ,OAAU,CACR,CACE,aAAgB,QAChB,KAAQ,OACR,KAAQ,SAEV,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGZ,KAAQ,WACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAGVC,YAAa,KAAMC,mBAAoB,6CACvCC,oBAAqB,KAAMC,SAAU,GAAIC,aAAc,EAAGC,aAAc,GAAIC,WAAY,GAAIC,kBAAmB,EAE/GC,cAAe,KAAMC,qBAAsB,6CAC3CC,sBAAuB,KAAMC,WAAY,GAAIC,eAAgB,EAAGC,eAAgB,GAAIC,aAAc,GAAIC,oBAAqB,EAE3HC,aAAc,KAAMC,oBAAqB,6CACzCC,qBAAsB,KAAMC,UAAW,GAAIC,cAAe,EAAGC,cAAe,GAAIC,YAAa,GAAIC,mBAAoB,EAErHC,aAAc,KAAMC,oBAAqB,6CACzCC,qBAAsB,KAAMC,UAAW,GAAIC,cAAe,EAAGC,cAAe,GAAIC,YAAa,GAAIC,mBAAoB,EAErHC,OAAO,EACPC,IAAK,GACLC,QAAS,OACTC,IAAKC,EAAQ,M,EAGvBC,kB,sBAAoB,wEAAA/D,EAAA,+EAGGL,IAHH,cAGVO,EAHU,gBAMOA,EAAK8D,IAAIC,cANhB,cAMVC,EANU,OAQVC,EARU,eAShBrE,OAAOG,SAASmE,GAAG,mBAAmB,SAASF,GAC7CC,EAAKE,SAAS,CAAExD,SAAUqD,EAAS,QAI/BF,EAAM,IAAI7D,IAAKK,UAAUC,aAC7B,iEAEIiB,EAAc,IAAIvB,IAAK6D,GAGvBM,EAAoB5C,EAAYsC,IAAIE,SAASK,oBACjD,sEAEF7C,EAAYsC,IAAIE,SAASM,OAAOC,IAAIH,GAE9BtC,EAAaN,EAAYsC,IAAIE,SAASM,OAAO,GAAGE,QAzBtC,KA4BUhD,EAAYiD,MA5BtB,UA4B0CjD,EAAYsC,IAAIY,WAAW5C,GA5BrE,2BA4BVC,EA5BU,KA4B4B4C,QA5B5B,gBA+BVjD,EAAsB,IAAIF,EAAYsC,IAAIc,SAC9C,EAAKnE,MAAMC,IACX,EAAKD,MAAMgB,oBAjCG,UAqCOC,EAAoBmD,QAAQC,QAAQC,OArC3C,eAqCVpD,EArCU,iBAwCW,IAAIqD,IAAM,uCAxCrB,eAwCVhC,EAxCU,OA2CViC,EAAqBjC,EAAakC,KAAKlB,SAASK,oBACpD,sEAGFrB,EAAakC,KAAKlB,SAASM,OAAOC,IAAIU,GAEhC3B,EAAcN,EAAakC,KAAKlB,SAASM,OAAO,GAAGE,QAjDzC,KAoDWxB,EAAayB,MApDxB,UAoD4CzB,EAAakC,KAAKR,WAAWpB,GApDzE,2BAoDVC,EApDU,KAoD8BoB,QApD9B,gBAuDVzB,EAAuB,IAAIF,EAAakC,KAAKN,SACjD,EAAKnE,MAAMC,IACX,EAAKD,MAAMwC,qBAzDG,UA6DQC,EAAqB2B,QAAQC,QAAQC,OA7D7C,eA6DV5B,EA7DU,QAgEVX,EAAe,EAAK/B,MAAMkD,IAAIwB,OAAO,6CAG9BC,WAAW,sEAnER,UAqES5C,EAAaxC,KAAK8D,IAAIC,cArE/B,eAqEZsB,EArEY,OAsEVvC,EAAcuC,EAAa,GAtEjB,UAyEM7C,EAAa8C,UAAUC,eAzE7B,eAyEZC,EAzEY,YA0EShD,EAAaxC,KAAKyE,MA1E3B,UA0EgDe,EAAUC,UAAU3C,GA1EpE,2BA0EkF4C,WAA9F3C,EA1EY,KA0EiC4B,QA1EjC,gBA6EVjC,EAAuB,IAAIF,EAAaxC,KAAK8D,IAAIc,SACrD,EAAKnE,MAAMC,IACX,EAAKD,MAAMgC,qBA/EG,UAmFQC,EAAqBmC,QAAQC,QAAQC,OAnF7C,QAmFVpC,EAnFU,OA+GhB,EAAKwB,SACH,CACEnE,OACAW,SAAUqD,EAAS,GACnBtC,sBAAqBF,cAAaM,aAAYC,oBAAmBJ,WACjEuB,uBAAsBF,eAAcM,cAAaC,qBAAoBJ,YACrET,uBAAsBF,eAAcM,cAAaC,qBAAoBJ,cArHzD,kDA2HhBgD,MAAM,0EAGNxF,QAAQyF,MAAR,MA9HgB,0D,EAkIpBC,Q,uCAAU,WAAOjF,GAAP,qCAAAd,EAAA,2DAEDc,EAFC,OAGD,QAHC,OASD,SATC,QAeD,SAfC,QAqBD,YArBC,+BAIEY,EAAc,EAAKf,MAAMe,YAJ3B,KAKsBA,EAAYiD,MALlC,SAKsD,EAAKqB,kBAAkB,OAL7E,0BAKE/D,EALF,KAKwC4C,QALxC,0BAMmB,EAAKoB,SAAS,OANjC,eAMEpE,EANF,OAOJ,EAAKwC,SAAS,CAAEpC,oBAAmBJ,WAAU6B,OAAO,EAAOE,QAAS,SAPhE,oCAUEV,EAAe,EAAKvC,MAAMuC,aAV5B,KAWuBA,EAAayB,MAXpC,UAWwD,EAAKqB,kBAAkB,QAX/E,2BAWEvC,EAXF,KAW0CoB,QAX1C,0BAYoB,EAAKoB,SAAS,QAZlC,eAYE5C,EAZF,OAaJ,EAAKgB,SAAS,CAAEZ,qBAAoBJ,YAAWK,OAAO,EAAOE,QAAS,SAblE,oCAgBElB,EAAe,EAAK/B,MAAM+B,aAhB5B,KAiBuBA,EAAaxC,KAAKyE,MAjBzC,UAiB6D,EAAKqB,kBAAkB,QAjBpF,2BAiBE/C,EAjBF,KAiB+C4B,QAjB/C,0BAkBoB,EAAKoB,SAAS,QAlBlC,eAkBEpD,EAlBF,OAmBJ,EAAKwB,SAAS,CAAEpB,qBAAoBJ,YAAWa,OAAO,EAAOE,QAAS,SAnBlE,oCAsBE1B,EAAgB,EAAKvB,MAAMuB,cAtB7B,KAuBwBA,EAAcyC,MAvBtC,UAuB0D,EAAKqB,kBAAkB,WAvBjF,2BAuBEvD,EAvBF,KAuB4CoC,QAvB5C,0BAwBqB,EAAKoB,SAAS,WAxBnC,eAwBE5D,EAxBF,OAyBJ,EAAKgC,SAAS,CAAE5B,sBAAqBJ,aAAYqB,OAAO,EAAOE,QAAS,SAzBpE,iE,wDA8BVoC,kB,uCAAoB,WAAOlF,GAAP,+CAAAd,EAAA,2DAEXc,EAFW,OAGX,QAHW,OAQX,SARW,OAaX,SAbW,QAmBX,YAnBW,iCAIoB,EAAKH,MAAhCe,EAJO,EAIPA,YAAaM,EAJN,EAIMA,WAJN,SAKkBN,EAAYsC,IAAIY,WAAW5C,GAL7C,cAKRC,EALQ,yBAMPA,GANO,gBASsB,EAAKtB,MAAlCuC,EATO,EASPA,aAAcM,EATP,EASOA,YATP,UAUmBN,EAAakC,KAAKR,WAAWpB,GAVhD,eAURC,EAVQ,yBAWPA,GAXO,iBAcsB,EAAK9C,MAAlC+B,EAdO,EAcPA,aAAcM,EAdP,EAcOA,YAdP,UAeQN,EAAa8C,UAAUC,eAf/B,eAeVC,EAfU,iBAgBkBA,EAAUC,UAAU3C,GAhBtC,eAgBVC,EAhBU,OAgBoD2C,WAhBpD,kBAiBP3C,GAjBO,iBAoBwB,EAAKtC,MAApCuB,EApBO,EAoBPA,cAAeM,EApBR,EAoBQA,aApBR,UAqBoBN,EAAc8B,IAAIY,WAAWpC,GArBjD,eAqBRC,EArBQ,yBAsBPA,GAtBO,4C,wDA2BpBwD,S,uCAAW,WAAOnF,GAAP,6BAAAd,EAAA,2DACFc,EADE,OAEF,QAFE,OAOF,SAPE,OAYF,SAZE,QAiBF,YAjBE,+BAGCc,EAAuB,EAAKjB,MAAMiB,oBAHnC,SAIkBA,EAAoBmD,QAAQC,QAAQC,OAJtD,cAICpD,EAJD,yBAKEA,GALF,cAQCuB,EAAwB,EAAKzC,MAAMyC,qBARpC,UASmBA,EAAqB2B,QAAQC,QAAQC,OATxD,eASC5B,EATD,yBAUEA,GAVF,eAaCT,EAAwB,EAAKjC,MAAMiC,qBAbpC,UAcmBA,EAAqBmC,QAAQC,QAAQC,OAdxD,eAcCpC,EAdD,yBAeEA,GAfF,eAkBCT,EAAyB,EAAKzB,MAAMyB,sBAlBrC,UAmBoBA,EAAsB2C,QAAQC,QAAQC,OAnB1D,eAmBC5C,EAnBD,yBAoBEA,GApBF,4C,wDAyBX6D,K,uCAAO,WAAOpF,EAAOC,GAAd,2BAAAf,EAAA,sDAELK,QAAQC,IAAIQ,EAAOC,GAFd,EAIqC,EAAKJ,MAAvCT,EAJH,EAIGA,KAAMc,EAJT,EAISA,cAAeH,EAJxB,EAIwBA,SAEvBsF,GAAY,IAAIC,MAAOC,UACvBC,EAAOpG,EAAK8D,IAAIpD,IAAI2F,mBAAmBvF,EAAe,CAC1DH,IAGI2F,EACJF,EAAOpG,EAAKyE,MAAM8B,QAAQvG,EAAKyE,MAAM+B,MAAMP,GAAY,IAAIQ,MAAM,GAZ9D,KAcE7F,EAdF,OAeE,QAfF,OAuBE,SAvBF,QA+BE,SA/BF,QAuCE,YAvCF,+BAgBDZ,EAAK8D,IAAI4C,SACNV,KAAKhG,EAAKyE,MAAMkC,UAAUL,GAAM3F,GAChCiG,MAAK,SAAAC,GACJ1G,QAAQC,IAAI6F,EAAWY,GACvB,EAAK1C,SAAS,CAAEvC,aAAcqE,EAAWpE,aAAcgF,IAAa,WAAK,EAAKC,OAAOlG,SApBxF,oCAwBDZ,EAAK8D,IAAI4C,SACNV,KAAKhG,EAAKyE,MAAMkC,UAAUL,GAAM3F,GAChCiG,MAAK,SAAAC,GACJ1G,QAAQC,IAAI6F,EAAWY,GACvB,EAAK1C,SAAS,CAAEf,cAAe6C,EAAW5C,cAAewD,IAAa,WAAK,EAAKC,OAAOlG,SA5B1F,oCAgCDZ,EAAK8D,IAAI4C,SACNV,KAAKhG,EAAKyE,MAAMkC,UAAUL,GAAM3F,GAChCiG,MAAK,SAAAC,GACJ1G,QAAQC,IAAI6F,EAAWY,GACvB,EAAK1C,SAAS,CAAEvB,cAAeqD,EAAWpD,cAAegE,IAAa,WAAK,EAAKC,OAAOlG,SApC1F,oCAwCDZ,EAAK8D,IAAI4C,SACNV,KAAKhG,EAAKyE,MAAMkC,UAAUL,GAAM3F,GAChCiG,MAAK,SAAAC,GACJ1G,QAAQC,IAAI6F,EAAWY,GACvB,EAAK1C,SAAS,CAAE/B,eAAgB6D,EAAW5D,eAAgBwE,IAAa,WAAK,EAAKC,OAAOlG,SA5C5F,iE,0DAkDPkG,O,uCAAS,WAAOlG,GAAP,+EAAAd,EAAA,sDACPK,QAAQC,IAAI,WAAaQ,GADlB,EAEoC,EAAKH,MAAxCE,EAFD,EAECA,SAAUY,EAFX,EAEWA,qBAEZ0C,EAJC,oBAMArD,EANA,OAOA,QAPA,OAuCA,SAvCA,QAwEA,SAxEA,QAiGA,YAjGA,iCAQgF,EAAKH,MAAhFe,EARL,EAQKA,YAAaK,EARlB,EAQkBA,aAAcD,EARhC,EAQgCA,aAAcH,EAR9C,EAQ8CA,mBAAoBK,EARlE,EAQkEA,WAErEsE,EAAO5E,EAAYsC,IAAIpD,IAAI2F,mBAAmB9E,EAAsB,CAClEM,EACAlB,EACAA,EACAiB,IAdC,UAiBSJ,EAAYsC,IAAIiD,YAAY,CACtCC,KAAMlF,EACNmF,GAAIxF,EACJ2E,SApBC,eAiBHc,EAjBG,OAuBH1F,EAAYsC,IAAIqD,gBAAgB,CAC9BH,KAAMlF,EACNmF,GAAIxF,EACJ2E,OACAc,IAAKE,SAAe,IAANF,KAEfhD,GAAG,mBAAmB,SAASmD,GAC9BlH,QAAQC,IAAI,WAAWiH,GACvBpD,EAAKqD,YAAY,mCAAmCD,MAErDnD,GAAG,WAAW,SAASqD,GACtBpH,QAAQC,IAAImH,GACZtD,EAAK4B,QAAQ,UAnCZ,sCAwCqF,EAAKpF,MAArFuC,EAxCL,EAwCKA,aAAcK,EAxCnB,EAwCmBA,cAAeD,EAxClC,EAwCkCA,cAAeH,EAxCjD,EAwCiDA,oBAAqBK,EAxCtE,EAwCsEA,YAEzE8C,EAAOpD,EAAakC,KAAKxE,IAAI2F,mBAAmB9E,EAAsB,CACpE8B,EACA1C,EACAA,EACAyC,IA9CC,UAiDSJ,EAAakC,KAAK6B,YAAY,CACxCC,KAAM1D,EACN2D,GAAIhE,EACJmD,SApDC,eAiDHc,EAjDG,OAuDHlE,EAAakC,KAAKiC,gBAAgB,CAChChG,KAAM,2BACN6F,KAAM1D,EACN2D,GAAIhE,EACJmD,OACAc,IAAKE,SAAe,IAANF,KAEfhD,GAAG,mBAAmB,SAASmD,GAC9BlH,QAAQC,IAAI,WAAWiH,GACvBpD,EAAKqD,YAAY,sCAAsCD,MAExDnD,GAAG,WAAW,SAASqD,GACtBpH,QAAQC,IAAImH,GACZtD,EAAK4B,QAAQ,WApEZ,sCAyEqF,EAAKpF,MAArF+B,EAzEL,EAyEKA,aAAcK,EAzEnB,EAyEmBA,cAAeD,EAzElC,EAyEkCA,cAAeH,EAzEjD,EAyEiDA,oBAAqBK,EAzEtE,EAyEsEA,YAEzEsD,EAAO5D,EAAaxC,KAAK8D,IAAIpD,IAAI2F,mBAAmB9E,EAAsB,CACxEsB,EACAlC,EACAA,EACAiC,IA/EC,UAkFcJ,EAAa2E,gBAAgB,CAC5CH,KAAMlE,EACNmE,GAAIxE,EACJ2D,SArFC,eAkFGoB,EAlFH,iBAwFgBA,EAAGC,UAxFnB,eAwFGJ,EAxFH,OAyFHlH,QAAQC,IAAI,WAAWiH,GACvBpD,EAAKqD,YAAY,oDAAoDD,GA1FlE,UA4FmBG,EAAGE,cA5FtB,eA4FGH,EA5FH,OA6FHpH,QAAQC,IAAImH,GACZtD,EAAK4B,QAAQ,QA9FV,sCAkG0F,EAAKpF,MAA1FuB,EAlGL,EAkGKA,cAAeK,EAlGpB,EAkGoBA,eAAgBD,EAlGpC,EAkGoCA,eAAgBH,EAlGpD,EAkGoDA,qBAAsBK,EAlG1E,EAkG0EA,aAE7E8D,EAAOpE,EAAc8B,IAAIpD,IAAI2F,mBAAmB9E,EAAsB,CACpEc,EACA1B,EACAA,EACAyB,IAxGC,UA2GSJ,EAAc8B,IAAIiD,YAAY,CACxCC,KAAM1E,EACN2E,GAAIhF,EACJmE,SA9GC,eA2GHc,EA3GG,OAiHHlF,EAAc8B,IAAIqD,gBAAgB,CAChCH,KAAM1E,EACN2E,GAAIhF,EACJmE,OACAc,IAAKE,SAAe,IAANF,KAEfhD,GAAG,mBAAmB,SAASmD,GAC9BlH,QAAQC,IAAI,WAAWiH,GACvBpD,EAAKqD,YAAY,qCAAqCD,MAEvDnD,GAAG,WAAW,SAASqD,GACtBpH,QAAQC,IAAImH,GACZtD,EAAK4B,QAAQ,cA7HZ,iE,wDAoITyB,YAAc,SAAC7D,GAEb,IAAIC,EAAU,EAAKjD,MAAMiD,QAELA,EAAT,QAAXA,EAA8B,QAAmB,OAEjD,EAAKS,SAAS,CACZX,OAAQ,EAAK/C,MAAM+C,MACnBC,MACAC,a,wEAIM,IAAD,OACP,OAAKiE,KAAKlH,MAAMT,KAId,yBAAK4H,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,GAAGC,MAAO,CAACC,OAAQ,QAASC,aAAc,QACvD,wBAAIH,UAAU,UAAS,uBAAGI,KAAK,+DAA+DC,OAAO,UAA9E,qBACvB,wBAAIL,UAAU,cAAd,uEACA,yBACEC,MAAO,CAACK,MAAO,QAASH,aAAc,QACtCI,IAAKvE,EAAQ,OAEf,wBAAIgE,UAAU,cAAd,kFACA,yBACEC,MAAO,CAACK,MAAO,QAASH,aAAc,QACtCI,IAAKvE,EAAQ,OAEf,wBAAIgE,UAAU,cAAd,iDACA,yBACEC,MAAO,CAACK,MAAO,QAASH,aAAc,QACtCI,IAAKvE,EAAQ,QAGjB,yBAAKgE,UAAU,wBAAwBhJ,GAAG,kBACxC,kBAACwJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,MAAO,CAAEE,aAAc,UAC1B,kBAACO,EAAA,EAAD,KACE,wBAAIV,UAAU,cACd,oDACwB,IACtB,0BAAMA,UAAU,aAAhB,4BAEF,2JAIJ,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIV,MAAO,CAAEE,aAAc,SACjC,kBAACS,EAAA,EAAD,CAAMZ,UAAU,uBAAuBC,MAAO,CAAEY,UAAW,MACzD,kBAACC,EAAA,EAAD,KACE,yBACEC,IAAI,MACJf,UAAU,uBACVO,IAAKvE,EAAQ,QAGjB,kBAACgF,EAAA,EAAD,CAAUf,MAAO,CAAEgB,UAAW,KAC5B,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKV,UAAU,cAAcW,GAAG,MAC9B,wBAAIX,UAAU,kBAAd,YACA,+CACE,uBAAGI,KAAM,wCAAwCL,KAAKlH,MAAMgB,mBAAoBwG,OAAO,UACpF,IAAIN,KAAKlH,MAAMgB,qBAGpB,wBAAImG,UAAU,iBACd,uCAAaD,KAAKlH,MAAMqB,YACxB,uCAAa6F,KAAKlH,MAAMsB,kBAAxB,QACA,wBAAI6F,UAAU,iBACd,wBAAIC,MAAO,CAACiB,WAAY,SAAxB,UAAyCnB,KAAKlH,MAAMkB,YAGxD,kBAAC0G,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACE,kBAACA,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErB,UAAU,aACVsB,MAAM,UACNC,QAAS,WAAK,EAAKnD,KAAK,MAAO,KAHjC,cAahB,kBAACsC,EAAA,EAAD,CAAKC,GAAG,IAAIV,MAAO,CAAEE,aAAc,SACjC,kBAACS,EAAA,EAAD,CAAMZ,UAAU,uBAAuBC,MAAO,CAAEY,UAAW,MACzD,kBAACC,EAAA,EAAD,KACE,yBACEC,IAAI,MACJf,UAAU,uBACVO,IAAKvE,EAAQ,QAGjB,kBAACgF,EAAA,EAAD,CAAUf,MAAO,CAAEgB,UAAW,KAC5B,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKV,UAAU,cAAcW,GAAG,MAC9B,wBAAIX,UAAU,kBAAd,QACA,+CACE,uBAAGI,KAAM,yDAAyDL,KAAKlH,MAAMgC,oBAAqBwF,OAAO,UACtG,IAAIN,KAAKlH,MAAMgC,sBAGpB,wBAAImF,UAAU,iBACd,uCAAaD,KAAKlH,MAAMqC,aACxB,uCAAa6E,KAAKlH,MAAMsC,mBAAxB,SACA,wBAAI6E,UAAU,iBACd,wBAAIC,MAAO,CAACiB,WAAY,SAAxB,UAAyCnB,KAAKlH,MAAMkC,aAGxD,kBAAC0F,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACE,kBAACA,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErB,UAAU,aACVsB,MAAM,UACNC,QAAS,WAAK,EAAKnD,KAAK,OAAQ,SAHlC,eAclB,kBAACqC,EAAA,EAAD,KA4CE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIV,MAAO,CAAEE,aAAc,SACjC,kBAACS,EAAA,EAAD,CAAMZ,UAAU,uBAAuBC,MAAO,CAAEY,UAAW,MACzD,kBAACC,EAAA,EAAD,KACE,yBACEC,IAAI,MACJf,UAAU,uBACVO,IAAKvE,EAAQ,KACbiE,MAAO,CAACE,aAAc,WAG1B,kBAACa,EAAA,EAAD,CAAUf,MAAO,CAAEgB,UAAW,KAC5B,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKV,UAAU,cAAcW,GAAG,MAC9B,wBAAIX,UAAU,kBAAd,UACA,+CACE,uBAAGI,KAAM,2CAA2CL,KAAKlH,MAAMwC,oBAAqBgF,OAAO,UACxF,IAAIN,KAAKlH,MAAMwC,sBAGpB,wBAAI2E,UAAU,iBACd,uCAAaD,KAAKlH,MAAM6C,aACxB,uCAAaqE,KAAKlH,MAAM8C,mBAAxB,SACA,wBAAIqE,UAAU,iBACd,wBAAIC,MAAO,CAACiB,WAAY,SAAxB,UAAyCnB,KAAKlH,MAAM0C,aAGxD,kBAACkF,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACE,kBAACA,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErB,UAAU,aACVsB,MAAM,UACNC,QAAS,WAAK,EAAKnD,KAAK,OAAQ,QAHlC,eAclB,kBAACqC,EAAA,EAAD,CAAKT,UAAU,qCACb,kBAACU,EAAA,EAAD,CAAKc,GAAG,KACN,wBAAIxB,UAAU,oCAAd,2BAGA,wBAAIA,UAAU,0BAAd,kDAIF,kBAACU,EAAA,EAAD,CAAKV,UAAU,6BAA6BwB,GAAG,KAC3C,4BAAI,uBAAGpB,KAAK,2CAA2CC,OAAO,UAA1D,iBAQlB,kBAACoB,EAAA,EAAD,CAAOC,OAAQ3B,KAAKlH,MAAM+C,MAAO+F,OAAQ5B,KAAKL,aAC5C,yBAAKM,UAAU,gBACb,wBAAIA,UAAU,cAAchJ,GAAG,qBAA/B,qBAIF,kBAAC4K,EAAA,EAAD,KACE,6CACA,4BACA,uBAAGxB,KAAML,KAAKlH,MAAMgD,IAAKwE,OAAO,UAAhC,sBAQJ,yBAAKJ,MAAK,aACRnE,QAASiE,KAAKlH,MAAMiD,QACpB+F,SAAU,QACVC,OAAQ,EACRC,KAAM,EACNC,IAAK,EACL1B,MAAO,OACP2B,OAAQ,OACRC,SAAU,OACVC,gBAAiB,cATT,kBAUS,sBAhQd,4E,GApjBKC,aCZEC,QACW,cAA7BrK,OAAOsK,SAASC,UAEe,UAA7BvK,OAAOsK,SAASC,UAEhBvK,OAAOsK,SAASC,SAASC,MACvB,2DCPNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/D,MAAK,SAAAgE,GACjCA,EAAaC,kB","file":"static/js/main.ed0e6936.chunk.js","sourcesContent":["var map = {\n\t\"./caver-core-helpers/src/index.js\": 10,\n\t\"./caver-core-method/src/index.js\": 41,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 202,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 216,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 217,\n\t\"./caver-core-requestmanager/src/index.js\": 219,\n\t\"./caver-core-subscriptions/src/index.js\": 97,\n\t\"./caver-core/src/index.js\": 52,\n\t\"./caver-klay/caver-klay-abi/src/index.js\": 131,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 226,\n\t\"./caver-klay/caver-klay-contract/src/index.js\": 231,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 232,\n\t\"./caver-klay/src/index.js\": 233,\n\t\"./caver-middleware/src/index.js\": 130,\n\t\"./caver-net/src/index.js\": 99,\n\t\"./caver-rtm/src/index.js\": 82,\n\t\"./caver-utils/iban/src/index.js\": 200,\n\t\"./caver-utils/promievent/src/index.js\": 198,\n\t\"./caver-utils/src/index.js\": 13\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 320;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 452;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 659;","module.exports = __webpack_public_path__ + \"static/media/json.ca29c276.PNG\";","module.exports = __webpack_public_path__ + \"static/media/function.74d043f1.PNG\";","module.exports = __webpack_public_path__ + \"static/media/relayer.ce624a36.png\";","module.exports = __webpack_public_path__ + \"static/media/eth.2bd3fbb3.png\";","module.exports = __webpack_public_path__ + \"static/media/celo.868adf04.png\";","module.exports = __webpack_public_path__ + \"static/media/klaytntr.1cf2fa4e.png\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\n// import SimpleMetaTXContract from \"./contracts/SimpleMetaTX.json\";\n\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\n\nimport Caver from \"caver-js\";\n\nimport './App.css'\n\nimport {\n  Button,\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroupItem,\n  ListGroup,\n  UncontrolledTooltip,\n  Modal, ModalBody\n} from \"reactstrap\";\n\nclass App extends Component {\n  state = { \n            abi: [\n              {\n                \"inputs\": [],\n                \"payable\": false,\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"constructor\"\n              },\n              {\n                \"anonymous\": false,\n                \"inputs\": [\n                  {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"delegate\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hash\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"name\": \"METATX\",\n                \"type\": \"event\"\n              },\n              {\n                \"constant\": true,\n                \"inputs\": [],\n                \"name\": \"owner\",\n                \"outputs\": [\n                  {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"payable\": false,\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              },\n              {\n                \"constant\": false,\n                \"inputs\": [\n                  {\n                    \"internalType\": \"address\",\n                    \"name\": \"_owner\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"name\": \"setOwner\",\n                \"outputs\": [],\n                \"payable\": false,\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              },\n              {\n                \"constant\": false,\n                \"inputs\": [\n                  {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_sig\",\n                    \"type\": \"bytes\"\n                  },\n                  {\n                    \"internalType\": \"address\",\n                    \"name\": \"_signer\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"address\",\n                    \"name\": \"_owner\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_timeStamp\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"name\": \"setOwner\",\n                \"outputs\": [],\n                \"payable\": false,\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              }\n            ],\n            web3: null, coinbase: null, \n            chain: \"eth\", chainId: 3, // ropsten\n            jsonInterface: {\n              constant: false,\n              inputs: [\n                {\n                  internalType: \"address\",\n                  name: \"_owner\",\n                  type: \"address\"\n                }\n              ],\n              name: \"setOwner\",\n              outputs: [],\n              payable: false,\n              stateMutability: \"nonpayable\",\n              type: \"function\"\n            },\n            relayerJsonInterface: {\n              \"constant\": false,\n              \"inputs\": [\n                {\n                  \"internalType\": \"bytes\",\n                  \"name\": \"_sig\",\n                  \"type\": \"bytes\"\n                },\n                {\n                  \"internalType\": \"address\",\n                  \"name\": \"_signer\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"address\",\n                  \"name\": \"_owner\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_timeStamp\",\n                  \"type\": \"uint256\"\n                }\n              ],\n              \"name\": \"setOwner\",\n              \"outputs\": [],\n              \"payable\": false,\n              \"stateMutability\": \"nonpayable\",\n              \"type\": \"function\"\n            },\n\n            ethProvider: null, ethContractAddress: \"0x01cdFd32E001BD837BCf174C133b4086ef6e87E9\", \n            ethContractInstance: null, ethOwner: \"\", ethTimestamp: 0, ethSignature: \"\", ethRelayer: \"\", ethRelayerBalance: 0,\n\n            maticProvider: null, maticContractAddress: \"0xa716C85AD3FeDb9C8f77D8EBA3c30c2a764A6BCb\", \n            maticContractInstance: null, maticOwner: \"\", maticTimestamp: 0, maticSignature: \"\", maticRelayer: \"\", maticRelayerBalance: 0,\n\n            celoProvider: null, celoContractAddress: \"0x01cdFd32E001BD837BCf174C133b4086ef6e87E9\", \n            celoContractInstance: null, celoOwner: \"\", celoTimestamp: 0, celoSignature: \"\", celoRelayer: \"\", celoRelayerBalance: 0,\n\n            klayProvider: null, klayContractAddress: \"0x01cdFd32E001BD837BCf174C133b4086ef6e87E9\", \n            klayContractInstance: null, klayOwner: \"\", klayTimestamp: 0, klaySignature: \"\", klayRelayer: \"\", klayRelayerBalance: 0,\n\n            modal: false,\n            url: \"\",\n            display: \"none\",\n            Kit: require('@celo/contractkit')\n          };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      const self = this  \n      window.ethereum.on(\"accountsChanged\", function(accounts) {\n        self.setState({ coinbase: accounts[0] });\n      });\n\n      // Set ETH Provider\n      const eth = new Web3.providers.HttpProvider(\n        \"https://ropsten.infura.io/v3/b2ad306cee024ab0a9059f807b86ae53\"\n      );\n      const ethProvider = new Web3(eth);\n\n      // Set Relayer ETH Wallet\n      const ethWalletInstance = ethProvider.eth.accounts.privateKeyToAccount(\n        \"0x0bf8b938ea5bb7b3eb0149a27de7f8a4387975685e11161a9212705104197917\"\n      );\n      ethProvider.eth.accounts.wallet.add(ethWalletInstance);\n      \n      const ethRelayer = ethProvider.eth.accounts.wallet[0].address;\n      \n      // Get ETH Relayer balance\n      const ethRelayerBalance = ethProvider.utils.fromWei(await ethProvider.eth.getBalance(ethRelayer))\n\n      // Set ETH contract\n      const ethContractInstance = new ethProvider.eth.Contract(\n        this.state.abi,\n        this.state.ethContractAddress\n      );\n      \n      // Set ETH contract owner\n      const ethOwner = await ethContractInstance.methods.owner().call();\n\n      // Set KLAY Provider\n      const klayProvider = await new Caver(\"https://api.baobab.klaytn.net:8651/\");\n      \n      // Set Relayer KLAY Wallet\n      const kalyWalletInstance = klayProvider.klay.accounts.privateKeyToAccount(\n        \"0x0bf8b938ea5bb7b3eb0149a27de7f8a4387975685e11161a9212705104197917\"\n      );\n\n      klayProvider.klay.accounts.wallet.add(kalyWalletInstance);\n\n      const klayRelayer = klayProvider.klay.accounts.wallet[0].address;\n      \n      // Get KLAY Relayer balance\n      const klayRelayerBalance = klayProvider.utils.fromWei(await klayProvider.klay.getBalance(klayRelayer))\n\n      // Set KLAY contract\n      const klayContractInstance = new klayProvider.klay.Contract(\n        this.state.abi,\n        this.state.klayContractAddress\n      );\n      \n      // Set KLAY contract owner\n      const klayOwner = await klayContractInstance.methods.owner().call();\n\n      // Set CELO Provider\n      const celoProvider = this.state.Kit.newKit('https://alfajores-forno.celo-testnet.org')\n\n      // Set Relayer CELO Wallet\n      celoProvider.addAccount('0x0bf8b938ea5bb7b3eb0149a27de7f8a4387975685e11161a9212705104197917')\n\n      let celoAccounts = await celoProvider.web3.eth.getAccounts()\n      const celoRelayer = celoAccounts[0]\n\n      // Get CELO Relayer balance\n      let goldtoken = await celoProvider.contracts.getGoldToken()\n      let celoRelayerBalance = celoProvider.web3.utils.fromWei((await goldtoken.balanceOf(celoRelayer)).toString())\n\n      // Set CELO contract\n      const celoContractInstance = new celoProvider.web3.eth.Contract(\n        this.state.abi,\n        this.state.celoContractAddress\n      )\n\n      // Set CELO contract owner\n      const celoOwner = await celoContractInstance.methods.owner().call();\n\n      // Set MATIC Provider\n      // const polygon = new Web3.providers.HttpProvider(\n      //   \"https://rpc-mumbai.matic.today\"\n      // );\n      // const maticProvider = new Web3(polygon);\n\n      // Set Relayer MATIC Wallet\n      // const maticWalletInstance = maticProvider.eth.accounts.privateKeyToAccount(\n      //   \"0x0bf8b938ea5bb7b3eb0149a27de7f8a4387975685e11161a9212705104197917\"\n      // );\n      // maticProvider.eth.accounts.wallet.add(maticWalletInstance);\n      \n      // const maticRelayer = maticProvider.eth.accounts.wallet[0].address;\n      \n      // Get MATIC Relayer balance\n      // const maticRelayerBalance = maticProvider.utils.fromWei(await maticProvider.eth.getBalance(maticRelayer))\n\n      // Set MATIC contract\n      // const maticContractInstance = new maticProvider.eth.Contract(\n      //   this.state.abi,\n      //   this.state.maticContractAddress\n      // );\n\n      // Set MATIC contract owner\n      // const maticOwner = await maticContractInstance.methods.owner().call();\n\n      this.setState(\n        { \n          web3, \n          coinbase: accounts[0], \n          ethContractInstance, ethProvider, ethRelayer, ethRelayerBalance, ethOwner,\n          klayContractInstance, klayProvider, klayRelayer, klayRelayerBalance, klayOwner,\n          celoContractInstance, celoProvider, celoRelayer, celoRelayerBalance, celoOwner,\n          // maticContractInstance, maticProvider, maticRelayer, maticRelayerBalance, maticOwner\n        }\n      );\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  refresh = async (chain) => {\n\n    switch(chain){\n      case 'eth':\n        const ethProvider = this.state.ethProvider\n        const ethRelayerBalance = ethProvider.utils.fromWei(await this.getRelayerBalance('eth'));\n        const ethOwner = await this.getOwner('eth');\n        this.setState({ ethRelayerBalance, ethOwner, modal: false, display: 'none' })\n      break;\n      case 'klay':\n        const klayProvider = this.state.klayProvider\n        const klayRelayerBalance = klayProvider.utils.fromWei(await this.getRelayerBalance('klay'));\n        const klayOwner = await this.getOwner('klay');\n        this.setState({ klayRelayerBalance, klayOwner, modal: false, display: 'none' })\n      break;\n      case 'celo':\n        const celoProvider = this.state.celoProvider\n        const celoRelayerBalance = celoProvider.web3.utils.fromWei(await this.getRelayerBalance('celo'));\n        const celoOwner = await this.getOwner('celo');\n        this.setState({ celoRelayerBalance, celoOwner, modal: false, display: 'none' })\n      break;\n      case 'polygon':\n        const maticProvider = this.state.maticProvider\n        const maticRelayerBalance = maticProvider.utils.fromWei(await this.getRelayerBalance('polygon'));\n        const maticOwner = await this.getOwner('polygon');\n        this.setState({ maticRelayerBalance, maticOwner, modal: false, display: 'none' })\n      break;\n    }\n  }\n\n  getRelayerBalance = async (chain) => {\n    \n    switch(chain){\n      case 'eth':\n        const {ethProvider, ethRelayer} = this.state;\n        const ethRelayerBalance = await ethProvider.eth.getBalance(ethRelayer);\n        return ethRelayerBalance;\n      break;\n      case 'klay':\n        const {klayProvider, klayRelayer} = this.state;\n        const klayRelayerBalance = await klayProvider.klay.getBalance(klayRelayer);\n        return klayRelayerBalance;\n      break;\n      case 'celo':\n        const {celoProvider, celoRelayer} = this.state;\n        let goldtoken = await celoProvider.contracts.getGoldToken()\n        let celoRelayerBalance = (await goldtoken.balanceOf(celoRelayer)).toString()\n        return celoRelayerBalance;\n      break;\n      case 'polygon':\n        const {maticProvider, maticRelayer} = this.state;\n        const maticRelayerBalance = await maticProvider.eth.getBalance(maticRelayer);\n        return maticRelayerBalance;\n      break;\n    }\n  }\n\n  getOwner = async (chain) => {\n    switch(chain){\n      case 'eth':\n        const ethContractInstance  = this.state.ethContractInstance;\n        const ethOwner = await ethContractInstance.methods.owner().call();\n        return ethOwner;\n      break;\n      case 'klay':\n        const klayContractInstance  = this.state.klayContractInstance;\n        const klayOwner = await klayContractInstance.methods.owner().call();\n        return klayOwner;\n      break;\n      case 'celo':\n        const celoContractInstance  = this.state.celoContractInstance;\n        const celoOwner = await celoContractInstance.methods.owner().call();\n        return celoOwner;\n      break;\n      case 'polygon':\n        const maticContractInstance  = this.state.maticContractInstance;\n        const maticOwner = await maticContractInstance.methods.owner().call();\n        return maticOwner;\n      break;\n    }\n  };\n  \n  sign = async (chain, chainId) => {\n\n    console.log(chain, chainId)\n\n    const { web3, jsonInterface, coinbase } = this.state\n\n    const timestamp = new Date().getTime();\n    const data = web3.eth.abi.encodeFunctionCall(jsonInterface, [\n      coinbase\n    ]);\n\n    const hex =\n      data + web3.utils.padLeft(web3.utils.toHex(timestamp), 64).slice(2);\n\n    switch(chain){\n      case 'eth':\n        web3.eth.personal\n          .sign(web3.utils.keccak256(hex), coinbase)\n          .then(signature => { \n            console.log(timestamp, signature)\n            this.setState({ ethTimestamp: timestamp, ethSignature: signature }, ()=>{this.metaTx(chain)})\n          })\n      break;\n      case 'klay':\n        web3.eth.personal\n          .sign(web3.utils.keccak256(hex), coinbase)\n          .then(signature => { \n            console.log(timestamp, signature)\n            this.setState({ klayTimestamp: timestamp, klaySignature: signature }, ()=>{this.metaTx(chain)})\n          })\n      break;\n      case 'celo':\n        web3.eth.personal\n          .sign(web3.utils.keccak256(hex), coinbase)\n          .then(signature => { \n            console.log(timestamp, signature)\n            this.setState({ celoTimestamp: timestamp, celoSignature: signature }, ()=>{this.metaTx(chain)})\n          })\n      break;\n      case 'polygon':\n        web3.eth.personal\n          .sign(web3.utils.keccak256(hex), coinbase)\n          .then(signature => { \n            console.log(timestamp, signature)\n            this.setState({ maticTimestamp: timestamp, maticSignature: signature }, ()=>{this.metaTx(chain)})\n          })\n      break;\n    }\n  }\n\n  metaTx = async (chain) => {\n    console.log('metaTx: ' + chain)\n    const { coinbase, relayerJsonInterface } = this.state\n    let data, gas;\n    const self = this;\n\n    switch(chain){\n      case 'eth':\n        const { ethProvider, ethSignature, ethTimestamp, ethContractAddress, ethRelayer} = this.state\n\n        data = ethProvider.eth.abi.encodeFunctionCall(relayerJsonInterface, [\n          ethSignature,\n          coinbase,\n          coinbase,\n          ethTimestamp\n        ]);\n    \n        gas = await ethProvider.eth.estimateGas({\n          from: ethRelayer,\n          to: ethContractAddress,\n          data,\n        })\n        \n        ethProvider.eth.sendTransaction({\n          from: ethRelayer,\n          to: ethContractAddress,\n          data,\n          gas: parseInt(gas * 1.5)\n        })\n        .on('transactionHash', function(hash){\n          console.log('txhash: '+hash)\n          self.toggleModal(\"https://ropsten.etherscan.io/tx/\"+hash)\n        })\n        .on('receipt', function(receipt){\n          console.log(receipt)\n          self.refresh('eth')\n        })\n        \n      break;\n      case 'klay':\n        const { klayProvider, klaySignature, klayTimestamp, klayContractAddress, klayRelayer} = this.state\n\n        data = klayProvider.klay.abi.encodeFunctionCall(relayerJsonInterface, [\n          klaySignature,\n          coinbase,\n          coinbase,\n          klayTimestamp\n        ]);\n    \n        gas = await klayProvider.klay.estimateGas({\n          from: klayRelayer,\n          to: klayContractAddress,\n          data\n        })\n        \n        klayProvider.klay.sendTransaction({\n          type: \"SMART_CONTRACT_EXECUTION\",\n          from: klayRelayer,\n          to: klayContractAddress,\n          data,\n          gas: parseInt(gas * 1.5)\n        })\n        .on('transactionHash', function(hash){\n          console.log('txhash: '+hash)\n          self.toggleModal(\"https://baobab.scope.klaytn.com/tx/\"+hash)\n        })\n        .on('receipt', function(receipt){\n          console.log(receipt)\n          self.refresh('klay')\n        })\n        \n      break;\n      case 'celo':\n        const { celoProvider, celoSignature, celoTimestamp, celoContractAddress, celoRelayer} = this.state\n\n        data = celoProvider.web3.eth.abi.encodeFunctionCall(relayerJsonInterface, [\n          celoSignature,\n          coinbase,\n          coinbase,\n          celoTimestamp\n        ]);\n        \n        const tx = await celoProvider.sendTransaction({\n          from: celoRelayer,\n          to: celoContractAddress,\n          data\n        })\n\n        const hash = await tx.getHash()\n        console.log('txhash: '+hash)\n        self.toggleModal(\"https://alfajores-blockscout.celo-testnet.org/tx/\"+hash)\n\n        const receipt = await tx.waitReceipt()\n        console.log(receipt)\n        self.refresh('celo')\n\n      break;\n      case 'polygon':\n        const { maticProvider, maticSignature, maticTimestamp, maticContractAddress, maticRelayer} = this.state\n\n        data = maticProvider.eth.abi.encodeFunctionCall(relayerJsonInterface, [\n          maticSignature,\n          coinbase,\n          coinbase,\n          maticTimestamp\n        ]);\n    \n        gas = await maticProvider.eth.estimateGas({\n          from: maticRelayer,\n          to: maticContractAddress,\n          data\n        })\n        \n        maticProvider.eth.sendTransaction({\n          from: maticRelayer,\n          to: maticContractAddress,\n          data,\n          gas: parseInt(gas * 1.5)\n        })\n        .on('transactionHash', function(hash){\n          console.log('txhash: '+hash)\n          self.toggleModal(\"https://mumbai.polygonscan.com/tx/\"+hash)\n        })\n        .on('receipt', function(receipt){\n          console.log(receipt)\n          self.refresh('polygon')\n        })\n        \n      break;\n    }\n  }\n\n  toggleModal = (url) => {\n\n    let display = this.state.display\n\n    display == 'none' ? display = 'block': display = 'none';\n\n    this.setState({\n      modal: !this.state.modal,\n      url,\n      display\n    });\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <div className=\"\">\n            <div className=\"\" style={{margin: '100px', marginBottom: '0px'}}>\n              <h1 className=\"h1-seo\"><a href=\"https://github.com/daoauth/EIPs/blob/master/EIPS/eip-2462.md\" target=\"_blank\">EIP-2462 Example</a></h1>\n              <h3 className=\"d-sm-block\">1. Choose chain and just sign JSON interface by using ONLY Metamask</h3>\n              <img\n                style={{width: '500px', marginBottom: '50px'}}\n                src={require(\"./assets/img/json.PNG\")}\n              />\n              <h3 className=\"d-sm-block\">2. Relayer pay gas fee and send a transaction to the blockchain of your choice</h3>\n              <img\n                style={{width: '700px', marginBottom: '50px'}}\n                src={require(\"./assets/img/function.PNG\")}\n              />   \n              <h3 className=\"d-sm-block\">3. You don't need to pay gas fee 👍</h3>\n              <img\n                style={{width: '600px', marginBottom: '20px'}}\n                src={require(\"./assets/img/relayer.png\")}\n              />\n            </div>\n            <div className=\"section section-basic\" id=\"basic-elements\">\n              <Container>\n                <Row style={{ marginBottom: \"150px\" }}>\n                  <Col>\n                    <hr className=\"line-info\" />\n                    <h1>\n                      Choose the blockchain{\" \"}\n                      <span className=\"text-info\">and sign JSON interface</span>\n                    </h1>   \n                    <p>* When you click the sign button, the relayer sends meta tx to call setOwner function, and your address becomes the owner.</p>\n                    \n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"6\" style={{ marginBottom: \"60px\" }}>\n                    <Card className=\"card-coin card-plain\" style={{ minHeight: 300 }}>\n                      <CardHeader>\n                        <img\n                          alt=\"...\"\n                          className=\"img-center img-fluid\"\n                          src={require(\"./assets/img/eth.png\")}\n                        />\n                      </CardHeader>\n                      <CardBody style={{ marginTop: 23 }}>\n                        <Row>\n                          <Col className=\"text-center\" md=\"12\">\n                            <h4 className=\"text-uppercase\">Ethereum</h4>\n                            <p>Contract Address: \n                              <a href={\"https://ropsten.etherscan.io/address/\"+this.state.ethContractAddress} target=\"_blank\">\n                                {\" \"+this.state.ethContractAddress}\n                              </a>\n                            </p>\n                            <hr className=\"line-success\" />\n                            <p>Relayer: {this.state.ethRelayer}</p>\n                            <p>Balance: {this.state.ethRelayerBalance} ETH</p>\n                            <hr className=\"line-success\" />\n                            <h4 style={{fontWeight: \"bold\"}}>Owner: {this.state.ethOwner}</h4>\n                          </Col>\n                        </Row>\n                        <Row>\n                            <ListGroup>\n                              <ListGroupItem></ListGroupItem>\n                                <ListGroupItem>\n                                  <Button\n                                    className=\"btn-simple\"\n                                    color=\"success\"\n                                    onClick={()=>{this.sign('eth', 3)}}\n                                  >\n                                    Sign\n                                  </Button>\n                                </ListGroupItem>\n                            </ListGroup>\n                        </Row>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                  <Col md=\"6\" style={{ marginBottom: \"60px\" }}>\n                    <Card className=\"card-coin card-plain\" style={{ minHeight: 300 }}>\n                      <CardHeader>\n                        <img\n                          alt=\"...\"\n                          className=\"img-center img-fluid\"\n                          src={require(\"./assets/img/celo.png\")}\n                        />\n                      </CardHeader>\n                      <CardBody style={{ marginTop: 23 }}>\n                        <Row>\n                          <Col className=\"text-center\" md=\"12\">\n                            <h4 className=\"text-uppercase\">Celo</h4>\n                            <p>Contract Address: \n                              <a href={\"https://alfajores-blockscout.celo-testnet.org/address/\"+this.state.celoContractAddress} target=\"_blank\">\n                                {\" \"+this.state.celoContractAddress}\n                              </a>\n                            </p>\n                            <hr className=\"line-success\" />\n                            <p>Relayer: {this.state.celoRelayer}</p>\n                            <p>Balance: {this.state.celoRelayerBalance} CELO</p>\n                            <hr className=\"line-success\" />\n                            <h4 style={{fontWeight: \"bold\"}}>Owner: {this.state.celoOwner}</h4>\n                          </Col>\n                        </Row>\n                        <Row>\n                            <ListGroup>\n                              <ListGroupItem></ListGroupItem>\n                                <ListGroupItem>\n                                  <Button\n                                    className=\"btn-simple\"\n                                    color=\"success\"\n                                    onClick={()=>{this.sign('celo', 44787)}}\n                                  >\n                                    Sign\n                                  </Button>\n                                </ListGroupItem>\n                            </ListGroup>\n                        </Row>\n                      </CardBody> \n                    </Card>\n                  </Col>\n                </Row>\n                <Row>\n                {/* <Col md=\"6\" style={{ marginBottom: \"150px\" }}>\n                    <Card className=\"card-coin card-plain\" style={{ minHeight: 300 }}>\n                      <CardHeader>\n                        <img\n                          alt=\"...\"\n                          className=\"img-center img-fluid\"\n                          src={require(\"./assets/img/polygon.png\")}\n                        />\n                      </CardHeader>\n                      <CardBody style={{ marginTop: 23 }}>\n                        <Row>\n                          <Col className=\"text-center\" md=\"12\">\n                            <h4 className=\"text-uppercase\">Polygon</h4>\n                            <p>Contract Address: \n                              <a href={\"https://mumbai.polygonscan.com/address/\"+this.state.maticContractAddress} target=\"_blank\">\n                                {\" \"+this.state.maticContractAddress}\n                              </a>\n                            </p>\n                            <hr className=\"line-success\" />\n                            <p>Relayer: {this.state.maticRelayer}</p>\n                            <p>Balance: {this.state.maticRelayerBalance} MATIC</p>\n                            <hr className=\"line-success\" />\n                            <h4 style={{fontWeight: \"bold\"}}>Owner: {this.state.maticOwner}</h4>\n                          </Col>\n                        </Row>\n                        <Row>\n                            <ListGroup>\n                              <ListGroupItem></ListGroupItem>\n                                <ListGroupItem>\n                                  <Button\n                                    className=\"btn-simple\"\n                                    color=\"success\"\n                                    onClick={()=>{this.sign('polygon', 80001)}}\n                                  >\n                                    Sign\n                                  </Button>\n                                </ListGroupItem>\n                            </ListGroup>\n                        </Row>\n                      </CardBody>                      \n                    </Card>\n                  </Col> */}\n                  \n                  <Col md=\"6\" style={{ marginBottom: \"60px\" }}>\n                    <Card className=\"card-coin card-plain\" style={{ minHeight: 300 }}>\n                      <CardHeader>\n                        <img\n                          alt=\"...\"\n                          className=\"img-center img-fluid\"\n                          src={require(\"./assets/img/klaytntr.png\")}\n                          style={{marginBottom: \"23px\"}}\n                        />\n                      </CardHeader>\n                      <CardBody style={{ marginTop: 23 }}>\n                        <Row>\n                          <Col className=\"text-center\" md=\"12\">\n                            <h4 className=\"text-uppercase\">Klaytn</h4>\n                            <p>Contract Address: \n                              <a href={\"https://baobab.scope.klaytn.com/account/\"+this.state.klayContractAddress} target=\"_blank\">\n                                {\" \"+this.state.klayContractAddress}\n                              </a>\n                            </p>\n                            <hr className=\"line-success\" />\n                            <p>Relayer: {this.state.klayRelayer}</p>\n                            <p>Balance: {this.state.klayRelayerBalance} KLAY</p>\n                            <hr className=\"line-success\" />\n                            <h4 style={{fontWeight: \"bold\"}}>Owner: {this.state.klayOwner}</h4>\n                          </Col>\n                        </Row>\n                        <Row>\n                            <ListGroup>\n                              <ListGroupItem></ListGroupItem>\n                                <ListGroupItem>\n                                  <Button\n                                    className=\"btn-simple\"\n                                    color=\"success\"\n                                    onClick={()=>{this.sign('klay', 1001)}}\n                                  >\n                                    Sign\n                                  </Button>\n                                </ListGroupItem>\n                            </ListGroup>\n                        </Row>\n                      </CardBody> \n                    </Card>\n                  </Col>\n                </Row>\n                <Row className=\"row-grid align-items-center my-md\">\n                  <Col lg=\"6\">\n                    <h3 className=\"text-info font-weight-light mb-2\">\n                      Thank you for visiting!\n                    </h3>\n                    <h4 className=\"mb-0 font-weight-light\">\n                      Let's get in touch on any of these platforms.\n                    </h4>\n                  </Col>\n                  <Col className=\"text-lg-center btn-wrapper\" lg=\"6\">\n                      <h4><a href=\"https://github.com/hsy822/eip2462-sample\" target=\"_blank\">Github</a></h4>\n                  </Col>\n                </Row>\n              </Container>\n              \n            </div>\n          </div>\n        </div>\n        <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Transaction sent\n            </h5>\n          </div>\n          <ModalBody>\n            <p>Please wait...</p>\n            <p></p>\n            <a href={this.state.url} target=\"_blank\">View on Explorer</a>\n          </ModalBody>\n          {/* <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggleModalDemo}>\n              Close\n            </Button>\n          </ModalFooter> */}\n        </Modal>\n        <div style={{\n          display: this.state.display, /* Hidden by default */\n          position: \"fixed\", /* Stay in place */\n          zIndex: 1, /* Sit on top */\n          left: 0,\n          top: 0,\n          width: \"100%\", /* Full width */\n          height: \"100%\", /* Full height */\n          overflow: \"auto\", /* Enable scroll if needed */\n          backgroundColor: \"rgb(0,0,0)\", /* Fallback color */\n          backgroundColor: \"rgba(0,0,0,0.4)\", /* Black w/ opacity */\n        }}> \n        </div>\n      </div>  \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport \"./assets/css/nucleo-icons.css\";\nimport \"./assets/css/blk-design-system-react.css\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}